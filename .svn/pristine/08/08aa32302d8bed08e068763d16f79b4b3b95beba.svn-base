<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoniu56.dao.InvoiceTemplateMapper" >
  <resultMap id="BaseResultMap" type="com.xiaoniu56.model.defaults.InvoiceTemplate" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="enterprise_name" property="enterpriseName" jdbcType="VARCHAR" />
    <result column="tax_registry_number" property="taxRegistryNumber" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="opening_bank" property="openingBank" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="invoice_type" property="invoiceType" jdbcType="BIGINT" />
    <result column="creater" property="creater" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="CHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="ver" property="ver" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="company_id" property="companyId" jdbcType="CHAR" />
    <result column="is_default" property="isDefault" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, enterprise_name, tax_registry_number, address, mobile, opening_bank, bank_account, 
    invoice_type, creater, create_time, modifier, modify_time, ver, user_id, company_id, 
    is_default
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_m_invoice_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from xn_m_invoice_template
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from xn_m_invoice_template
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplateExample" >
    delete from xn_m_invoice_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplate" >
    insert into xn_m_invoice_template (id, enterprise_name, tax_registry_number, 
      address, mobile, opening_bank, 
      bank_account, invoice_type, creater, 
      create_time, modifier, modify_time, 
      ver, user_id, company_id, is_default
      )
    values (#{id,jdbcType=CHAR}, #{enterpriseName,jdbcType=VARCHAR}, #{taxRegistryNumber,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{openingBank,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{invoiceType,jdbcType=BIGINT}, #{creater,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=CHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{ver,jdbcType=BIGINT}, #{userId,jdbcType=CHAR}, #{companyId,jdbcType=CHAR}, #{isDefault,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplate" >
    insert into xn_m_invoice_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="enterpriseName != null" >
        enterprise_name,
      </if>
      <if test="taxRegistryNumber != null" >
        tax_registry_number,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="openingBank != null" >
        opening_bank,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="invoiceType != null" >
        invoice_type,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="ver != null" >
        ver,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="enterpriseName != null" >
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="taxRegistryNumber != null" >
        #{taxRegistryNumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="openingBank != null" >
        #{openingBank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=BIGINT},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ver != null" >
        #{ver,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=CHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplateExample" resultType="java.lang.Integer" >
    select count(*) from xn_m_invoice_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplate" >
    update xn_m_invoice_template
    <set >
      <if test="enterpriseName != null" >
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="taxRegistryNumber != null" >
        tax_registry_number = #{taxRegistryNumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="openingBank != null" >
        opening_bank = #{openingBank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="invoiceType != null" >
        invoice_type = #{invoiceType,jdbcType=BIGINT},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ver != null" >
        ver = #{ver,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=CHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoniu56.model.defaults.InvoiceTemplate" >
    update xn_m_invoice_template
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      tax_registry_number = #{taxRegistryNumber,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      opening_bank = #{openingBank,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      invoice_type = #{invoiceType,jdbcType=BIGINT},
      creater = #{creater,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=CHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      ver = #{ver,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=CHAR},
      company_id = #{companyId,jdbcType=CHAR},
      is_default = #{isDefault,jdbcType=BIGINT}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>