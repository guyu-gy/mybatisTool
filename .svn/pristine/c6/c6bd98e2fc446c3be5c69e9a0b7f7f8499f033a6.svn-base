<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoniu56.dao.TransportChargeItemMapper" >
  <resultMap id="BaseResultMap" type="com.xiaoniu56.model.defaults.TransportChargeItem" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="transport_charge_id" property="transportChargeId" jdbcType="CHAR" />
    <result column="account_subject_id" property="accountSubjectId" jdbcType="CHAR" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="subtotal_price" property="subtotalPrice" jdbcType="DECIMAL" />
    <result column="creater" property="creater" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="CHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="ver" property="ver" jdbcType="BIGINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="method_type" property="methodType" jdbcType="BIGINT" />
    <result column="starting_price_method" property="startingPriceMethod" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, amount, transport_charge_id, account_subject_id, unit_price, subtotal_price, 
    creater, create_time, modifier, modify_time, ver, description, method_type, starting_price_method
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiaoniu56.model.defaults.TransportChargeItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xn_m_transport_charge_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from xn_m_transport_charge_item
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from xn_m_transport_charge_item
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoniu56.model.defaults.TransportChargeItemExample" >
    delete from xn_m_transport_charge_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoniu56.model.defaults.TransportChargeItem" >
    insert into xn_m_transport_charge_item (id, amount, transport_charge_id, 
      account_subject_id, unit_price, subtotal_price, 
      creater, create_time, modifier, 
      modify_time, ver, description, 
      method_type, starting_price_method)
    values (#{id,jdbcType=CHAR}, #{amount,jdbcType=DECIMAL}, #{transportChargeId,jdbcType=CHAR}, 
      #{accountSubjectId,jdbcType=CHAR}, #{unitPrice,jdbcType=DECIMAL}, #{subtotalPrice,jdbcType=DECIMAL}, 
      #{creater,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=CHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{ver,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{methodType,jdbcType=BIGINT}, #{startingPriceMethod,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoniu56.model.defaults.TransportChargeItem" >
    insert into xn_m_transport_charge_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="transportChargeId != null" >
        transport_charge_id,
      </if>
      <if test="accountSubjectId != null" >
        account_subject_id,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="subtotalPrice != null" >
        subtotal_price,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="ver != null" >
        ver,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="methodType != null" >
        method_type,
      </if>
      <if test="startingPriceMethod != null" >
        starting_price_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="transportChargeId != null" >
        #{transportChargeId,jdbcType=CHAR},
      </if>
      <if test="accountSubjectId != null" >
        #{accountSubjectId,jdbcType=CHAR},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="subtotalPrice != null" >
        #{subtotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ver != null" >
        #{ver,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="methodType != null" >
        #{methodType,jdbcType=BIGINT},
      </if>
      <if test="startingPriceMethod != null" >
        #{startingPriceMethod,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoniu56.model.defaults.TransportChargeItemExample" resultType="java.lang.Integer" >
    select count(*) from xn_m_transport_charge_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoniu56.model.defaults.TransportChargeItem" >
    update xn_m_transport_charge_item
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="transportChargeId != null" >
        transport_charge_id = #{transportChargeId,jdbcType=CHAR},
      </if>
      <if test="accountSubjectId != null" >
        account_subject_id = #{accountSubjectId,jdbcType=CHAR},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="subtotalPrice != null" >
        subtotal_price = #{subtotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ver != null" >
        ver = #{ver,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="methodType != null" >
        method_type = #{methodType,jdbcType=BIGINT},
      </if>
      <if test="startingPriceMethod != null" >
        starting_price_method = #{startingPriceMethod,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoniu56.model.defaults.TransportChargeItem" >
    update xn_m_transport_charge_item
    set amount = #{amount,jdbcType=DECIMAL},
      transport_charge_id = #{transportChargeId,jdbcType=CHAR},
      account_subject_id = #{accountSubjectId,jdbcType=CHAR},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      subtotal_price = #{subtotalPrice,jdbcType=DECIMAL},
      creater = #{creater,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=CHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      ver = #{ver,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      method_type = #{methodType,jdbcType=BIGINT},
      starting_price_method = #{startingPriceMethod,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>